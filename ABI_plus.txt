+cyclus::Agent*& std::forward<cyclus::Agent*&>(std::remove_reference<cyclus::Agent*&>::type&)
+cyclus::Agent*&& std::forward<cyclus::Agent*>(std::remove_reference<cyclus::Agent*>::type&)
+cyclus::Agent::version()
+cyclus::AgentSpec const& std::forward<cyclus::AgentSpec const&>(std::remove_reference<cyclus::AgentSpec const&>::type&)
+cyclus::AgentSpec&& std::forward<cyclus::AgentSpec>(std::remove_reference<cyclus::AgentSpec>::type&)
+cyclus::AgentSpec::AgentSpec(cyclus::AgentSpec&&)
+cyclus::AgentSpec::operator=(cyclus::AgentSpec&&)
+cyclus::Arc const& std::__get_helper<0ul, cyclus::Arc const&>(std::_Tuple_impl<0ul, cyclus::Arc const&>&)
+cyclus::Arc const& std::forward<cyclus::Arc const&>(std::remove_reference<cyclus::Arc const&>::type&)
+cyclus::Arc& std::forward<cyclus::Arc&>(std::remove_reference<cyclus::Arc&>::type&)
+cyclus::Arc&& std::forward<cyclus::Arc>(std::remove_reference<cyclus::Arc>::type&)
+cyclus::Arc*& std::forward<cyclus::Arc*&>(std::remove_reference<cyclus::Arc*&>::type&)
+cyclus::Arc*&& std::forward<cyclus::Arc*>(std::remove_reference<cyclus::Arc*>::type&)
+cyclus::Arc::pref() const
+cyclus::Arc::pref(double)
+cyclus::Bid<cyclus::Material>*& std::forward<cyclus::Bid<cyclus::Material>*&>(std::remove_reference<cyclus::Bid<cyclus::Material>*&>::type&)
+cyclus::Bid<cyclus::Material>*&& std::forward<cyclus::Bid<cyclus::Material>*>(std::remove_reference<cyclus::Bid<cyclus::Material>*>::type&)
+cyclus::Bid<cyclus::Material>::Bid(cyclus::Request<cyclus::Material>*, boost::shared_ptr<cyclus::Material>, cyclus::Trader*, boost::shared_ptr<cyclus::BidPortfolio<cyclus::Material> >, bool, double)
+cyclus::Bid<cyclus::Material>::Create(cyclus::Request<cyclus::Material>*, boost::shared_ptr<cyclus::Material>, cyclus::Trader*, boost::shared_ptr<cyclus::BidPortfolio<cyclus::Material> >, bool, double)
+cyclus::Bid<cyclus::Material>::preference() const
+cyclus::Bid<cyclus::Product>*& std::forward<cyclus::Bid<cyclus::Product>*&>(std::remove_reference<cyclus::Bid<cyclus::Product>*&>::type&)
+cyclus::Bid<cyclus::Product>*&& std::forward<cyclus::Bid<cyclus::Product>*>(std::remove_reference<cyclus::Bid<cyclus::Product>*>::type&)
+cyclus::Bid<cyclus::Product>::preference() const
+cyclus::BidPortfolio<cyclus::Material>::AddBid(cyclus::Request<cyclus::Material>*, boost::shared_ptr<cyclus::Material>, cyclus::Trader*, bool, double)
+cyclus::Blob::Blob()
+cyclus::Blob::operator=(cyclus::Blob&&)
+cyclus::CapacityConstraint<cyclus::Material> const& std::forward<cyclus::CapacityConstraint<cyclus::Material> const&>(std::remove_reference<cyclus::CapacityConstraint<cyclus::Material> const&>::type&)
+cyclus::CapacityConstraint<cyclus::Product> const& std::forward<cyclus::CapacityConstraint<cyclus::Product> const&>(std::remove_reference<cyclus::CapacityConstraint<cyclus::Product> const&>::type&)
+cyclus::Composition::Decay(int, unsigned long)
+cyclus::Cond const& std::forward<cyclus::Cond const&>(std::remove_reference<cyclus::Cond const&>::type&)
+cyclus::Cond& std::forward<cyclus::Cond&>(std::remove_reference<cyclus::Cond&>::type&)
+cyclus::Cond&& std::forward<cyclus::Cond>(std::remove_reference<cyclus::Cond>::type&)
+cyclus::Cond::Cond(cyclus::Cond&&)
+cyclus::Context::AddPrototype(std::string, cyclus::Agent*, bool)
+cyclus::DbTypes const& std::__get_helper<0ul, cyclus::DbTypes const&>(std::_Tuple_impl<0ul, cyclus::DbTypes const&>&)
+cyclus::DbTypes const& std::forward<cyclus::DbTypes const&>(std::remove_reference<cyclus::DbTypes const&>::type&)
+cyclus::DbTypes&& std::forward<cyclus::DbTypes&&>(std::remove_reference<cyclus::DbTypes&&>::type&)
+cyclus::DbTypes&& std::forward<cyclus::DbTypes>(std::remove_reference<cyclus::DbTypes>::type&)
+cyclus::DepricationError::DepricationError(std::string)
+cyclus::DepricationError::~DepricationError()
+cyclus::Digest const& std::forward<cyclus::Digest const&>(std::remove_reference<cyclus::Digest const&>::type&)
+cyclus::Env::allow_milps()
+cyclus::ExchangeNodeGroup*&& std::forward<cyclus::ExchangeNodeGroup*&&>(std::remove_reference<cyclus::ExchangeNodeGroup*&&>::type&)
+cyclus::ExchangeNodeGroup*&& std::forward<cyclus::ExchangeNodeGroup*>(std::remove_reference<cyclus::ExchangeNodeGroup*>::type&)
+cyclus::ExchangeNodeGroup::HasArcs()
+cyclus::ExchangeSolver::ArcCost(cyclus::Arc const&)
+cyclus::ExchangeSolver::Cost(cyclus::Arc const&, bool)
+cyclus::ExchangeSolver::PseudoCostByCap(double)
+cyclus::ExchangeSolver::PseudoCostByPref(double)
+cyclus::ExchangeSolver::sim_ctx(cyclus::Context*)
+cyclus::GetTraderPrototype(cyclus::Trader*)
+cyclus::GetTraderSpec(cyclus::Trader*)
+cyclus::Hdf5Back::Close()
+cyclus::Material::DecayHeat()
+cyclus::MockSim::MockSim(int)
+cyclus::PrefixInjector::operator=(cyclus::PrefixInjector&&)
+cyclus::ProgSolver::ProgSolver(std::string)
+cyclus::ProgSolver::ProgSolver(std::string, double)
+cyclus::ProgSolver::ProgSolver(std::string, double, bool, bool, bool)
+cyclus::ProgSolver::WriteMPS()
+cyclus::ProgTranslator::CheckPref(double)
+cyclus::ProgTranslatorContext::ProgTranslatorContext()
+cyclus::ProgTranslatorContext::~ProgTranslatorContext()
+cyclus::QueryResult::operator=(cyclus::QueryResult&&)
+cyclus::Request<cyclus::Material>*&& std::forward<cyclus::Request<cyclus::Material>*&&>(std::remove_reference<cyclus::Request<cyclus::Material>*&&>::type&)
+cyclus::Request<cyclus::Material>*&& std::forward<cyclus::Request<cyclus::Material>*>(std::remove_reference<cyclus::Request<cyclus::Material>*>::type&)
+cyclus::Request<cyclus::Material>::Create(boost::shared_ptr<cyclus::Material>, cyclus::Trader*, boost::shared_ptr<cyclus::RequestPortfolio<cyclus::Material> >, std::string, double, bool, std::function<double (boost::shared_ptr<cyclus::Material>)>)
+cyclus::Request<cyclus::Material>::Request(boost::shared_ptr<cyclus::Material>, cyclus::Trader*, boost::shared_ptr<cyclus::RequestPortfolio<cyclus::Material> >, std::string, double, bool, std::function<double (boost::shared_ptr<cyclus::Material>)>)
+cyclus::Request<cyclus::Product>*&& std::forward<cyclus::Request<cyclus::Product>*&&>(std::remove_reference<cyclus::Request<cyclus::Product>*&&>::type&)
+cyclus::Request<cyclus::Product>*&& std::forward<cyclus::Request<cyclus::Product>*>(std::remove_reference<cyclus::Request<cyclus::Product>*>::type&)
+cyclus::RequestPortfolio<cyclus::Material>::AddRequest(boost::shared_ptr<cyclus::Material>, cyclus::Trader*, std::string, double, bool, std::function<double (boost::shared_ptr<cyclus::Material>)>)
+cyclus::ResourceExchange<cyclus::Material>::Empty()
+cyclus::ResourceExchange<cyclus::Material>::InitTraders()
+cyclus::ResourceExchange<cyclus::Material>::trader_compare::operator()(cyclus::Trader*, cyclus::Trader*) const
+cyclus::ResourceExchange<cyclus::Product>::Empty()
+cyclus::ResourceExchange<cyclus::Product>::InitTraders()
+cyclus::ResourceExchange<cyclus::Product>::trader_compare::operator()(cyclus::Trader*, cyclus::Trader*) const
+cyclus::SimInfo::operator=(cyclus::SimInfo&&)
+cyclus::SimInit::LoadCoinSolver(bool, std::set<std::string, std::less<std::string>, std::allocator<std::string> >)
+cyclus::SqliteBack::Close()
+cyclus::Timer::RecordInventories(cyclus::Agent*)
+cyclus::Timer::RecordInventory(cyclus::Agent*, std::string, boost::shared_ptr<cyclus::Material>)
+cyclus::Trade<cyclus::Material> const& std::forward<cyclus::Trade<cyclus::Material> const&>(std::remove_reference<cyclus::Trade<cyclus::Material> const&>::type&)
+cyclus::Trade<cyclus::Material>&& std::forward<cyclus::Trade<cyclus::Material> >(std::remove_reference<cyclus::Trade<cyclus::Material> >::type&)
+cyclus::Trade<cyclus::Product> const& std::forward<cyclus::Trade<cyclus::Product> const&>(std::remove_reference<cyclus::Trade<cyclus::Product> const&>::type&)
+cyclus::Trade<cyclus::Product>&& std::forward<cyclus::Trade<cyclus::Product> >(std::remove_reference<cyclus::Trade<cyclus::Product> >::type&)
+cyclus::Trader*& std::forward<cyclus::Trader*&>(std::remove_reference<cyclus::Trader*&>::type&)
+cyclus::Trader*&& std::forward<cyclus::Trader*&&>(std::remove_reference<cyclus::Trader*&&>::type&)
+cyclus::Trader*&& std::forward<cyclus::Trader*>(std::remove_reference<cyclus::Trader*>::type&)
+cyclus::Warnings&& std::forward<cyclus::Warnings&&>(std::remove_reference<cyclus::Warnings&&>::type&)
+cyclus::Warnings&& std::forward<cyclus::Warnings>(std::remove_reference<cyclus::Warnings>::type&)
+cyclus::cy_eps
+cyclus::cy_eps_rsrc
+cyclus::toolkit::BuildOrder&& std::forward<cyclus::toolkit::BuildOrder>(std::remove_reference<cyclus::toolkit::BuildOrder>::type&)
+cyclus::toolkit::CommodInfo const& std::forward<cyclus::toolkit::CommodInfo const&>(std::remove_reference<cyclus::toolkit::CommodInfo const&>::type&)
+cyclus::toolkit::CommodInfo&& std::forward<cyclus::toolkit::CommodInfo>(std::remove_reference<cyclus::toolkit::CommodInfo>::type&)
+cyclus::toolkit::Commodity const& std::__get_helper<0ul, cyclus::toolkit::Commodity const&>(std::_Tuple_impl<0ul, cyclus::toolkit::Commodity const&>&)
+cyclus::toolkit::Commodity const& std::forward<cyclus::toolkit::Commodity const&>(std::remove_reference<cyclus::toolkit::Commodity const&>::type&)
+cyclus::toolkit::Commodity&& std::forward<cyclus::toolkit::Commodity>(std::remove_reference<cyclus::toolkit::Commodity>::type&)
+cyclus::toolkit::Commodity::Commodity(cyclus::toolkit::Commodity&&)
+cyclus::toolkit::PiecewiseFunction::PiecewiseFunctionInfo&& std::forward<cyclus::toolkit::PiecewiseFunction::PiecewiseFunctionInfo>(std::remove_reference<cyclus::toolkit::PiecewiseFunction::PiecewiseFunctionInfo>::type&)
+cyclus::toolkit::PiecewiseFunction::PiecewiseFunctionInfo::PiecewiseFunctionInfo(cyclus::toolkit::PiecewiseFunction::PiecewiseFunctionInfo&&)
